{"version":3,"sources":["api/API_DATA.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","components/Pagination.jsx","App.js","index.js"],"names":["loadPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePosts","posts","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","loadUsers","_ref2","_callee2","responseUsers","users","_context2","loadComments","_ref3","_callee3","responseComments","comments","_context3","User","userItem","react_default","createElement","className","name","username","email","Comment","body","CommentList","map","comment","components_Comment","Post","state","showComment","_this2","post","props","components_User","user","title","tabIndex","role","onKeyDown","onClick","setState","components_CommentList","React","Component","PostList","filtredPosts","components_Post","key","id","Pagination","handleClick","event","preventDefault","Number","target","value","_this","page","setCurrentPage","handleClickPrevNextDirection","direction","_this$props","totalPages","paginationButtons","pagesCount","buttons","i","push","handleSelect","changeItemsPerPage","_this$props2","disabled","onChange","App","isLoaded","isLoading","perPage","totalPostsCount","LoadData","postsWithCommentsAndUsers","objectSpread","filter","postId","find","userId","length","setAmountPosts","items","itemsPerPage","maxValue","slice","AmountPosts","AllPosts","currentPage","pageCount","_this$state","onPageGhanged","components_Pagination","total","components_PostList","type","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a8e71255.chunk.js","sourcesContent":["\nexport const loadPosts = async() => {\n  const urlPosts = 'https://jsonplaceholder.typicode.com/posts';\n  const responsePosts = await fetch(urlPosts);\n  const posts = await responsePosts.json();\n\n  return posts;\n};\n\nexport const loadUsers = async() => {\n  const urlUsers = 'https://jsonplaceholder.typicode.com/users';\n  const responseUsers = await fetch(urlUsers);\n  const users = await responseUsers.json();\n\n  return users;\n};\n\nexport const loadComments = async() => {\n  const urlComments = 'https://jsonplaceholder.typicode.com/comments';\n  const responseComments = await fetch(urlComments);\n  const comments = await responseComments.json();\n\n  return comments;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userItem }) => (\n  <div className=\"user_information\">\n    <p>\n      <b>Name</b>\n      {' '}\n      {userItem.name}\n    </p>\n    <p>\n      <b>Nick name</b>\n      {' '}\n      {userItem.username}\n    </p>\n    <p>\n      <b>Email</b>\n      {' '}\n      {userItem.email}\n    </p>\n  </div>\n);\n\nUser.propTypes = {\n  userItem: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comments }) => (\n  <div className=\"comments\">\n    <br />\n    <b>Comment</b>\n    {' '}\n    {comments.body}\n  </div>\n);\n\nComment.propTypes = {\n  comments: PropTypes.shape({\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <p>\n    {comments.map(comment => <Comment comments={comment} />)}\n  </p>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object])).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nclass Post extends React.Component {\n  state = {\n    showComment: false,\n  }\n\n  render() {\n    const { post } = this.props;\n\n    return (\n      <li\n        className=\"post_list\"\n      >\n        <User userItem={post.user} />\n        <p className=\"post_title\">\n          <b>Title</b>\n          {' '}\n          {post.title}\n        </p>\n\n        <p className=\"post_body\">{post.body}</p>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onKeyDown={() => {}}\n          className=\"show_comments\"\n          onClick={() => this.setState(state => ({\n            showComment: !state.showComment,\n          }))}\n        >\n          <p className=\"view-comments\">\n            {this.state.showComment\n              ? 'Hide comments'\n              : 'View comments'}\n          </p>\n        </div>\n        {\n          this.state.showComment\n            ? <CommentList comments={post.comments} />\n            : ''\n        }\n      </li>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    user: PropTypes.string,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ filtredPosts }) => (\n  <ul>\n    {filtredPosts.map(post => (\n      <div>\n        <Post key={post.id} post={post} />\n      </div>\n    ))\n    }\n  </ul>\n);\n\nPostList.propTypes = {\n  filtredPosts: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object])).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\n\nclass Pagination extends React.Component {\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (Number(event.target.value) === Number(this.props.page)) {\n      return;\n    }\n\n    this.props.setCurrentPage(Number(event.target.value));\n  };\n\n  handleClickPrevNextDirection = (direction) => {\n    const { page, totalPages } = this.props;\n\n    if (direction === 'prev' && Number(page) === 1) {\n      return;\n    }\n\n    if (direction === 'next' && Number(page) === Number(totalPages)) {\n      return;\n    }\n\n    switch (direction) {\n      case 'next':\n        this.props.setCurrentPage(Number(page) + 1);\n\n        return;\n      case 'prev':\n        this.props.setCurrentPage(Number(page) - 1);\n    }\n  };\n\n  paginationButtons = (pagesCount) => {\n    const buttons = [];\n\n    for (let i = 1; i < pagesCount + 1; i++) {\n      buttons.push(\n        <button\n          className={i === this.props.page\n            ? 'pagination_button pagination_button-selected'\n            : 'pagination_button'}\n          onClick={this.handleClick}\n          value={i}\n        >\n          {i}\n        </button>\n      );\n    }\n\n    return buttons;\n  };\n\n  handleSelect = (event) => {\n    this.props.changeItemsPerPage(event.target.value);\n  };\n\n  render() {\n    const { page, totalPages } = this.props;\n\n    return (\n      <div className=\"pagination\">\n        <button\n          onClick={() => this.handleClickPrevNextDirection('prev')}\n          className=\"pagination_button-direction\"\n          disabled={Number(page) === 1}\n        >\n          Prev\n        </button>\n        {this.paginationButtons(totalPages)}\n        <button\n          onClick={() => this.handleClickPrevNextDirection('next')}\n          className=\"pagination_button-direction\"\n          disabled={Number(page) === Number(totalPages)}\n        >\n          Next\n        </button>\n        <div className=\"pagination_select \">\n          View\n          <select\n            className=\"pagination_select-select\"\n            onChange={this.handleSelect}\n          >\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={15}>15</option>\n          </select>\n          posts\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pagination;\n","import React from 'react';\nimport { loadPosts, loadUsers, loadComments } from './api/API_DATA';\nimport './App.css';\nimport PostList from './components/PostList';\nimport Pagination from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoaded: false,\n    isLoading: false,\n    perPage: 5,\n    totalPostsCount: 0,\n    page: 1,\n  };\n\n  LoadData = async() => {\n    this.setState({\n      isLoading: true,\n    });\n\n    const users = await loadUsers();\n    const posts = await loadPosts();\n    const comments = await loadComments();\n\n    const postsWithCommentsAndUsers = posts.map(post => ({\n      ...post,\n      comments: comments.filter(comment => post.id === comment.postId),\n      user: users.find(user => user.id === post.userId),\n    }));\n\n    this.setState({\n      posts: postsWithCommentsAndUsers,\n      totalPostsCount: postsWithCommentsAndUsers.length,\n      isLoaded: true,\n      isLoading: false,\n    });\n  }\n\n  setAmountPosts = (items, itemsPerPage, page) => {\n    const maxValue = page * itemsPerPage;\n    const AmountPosts = items.slice(maxValue - itemsPerPage, maxValue);\n\n    return AmountPosts;\n  };\n\n  totalPages = (AmountPosts, AllPosts) => (\n    AllPosts / AmountPosts\n  );\n\n  setCurrentPage = (currentPage) => {\n    this.setState({\n      page: currentPage,\n    });\n  }\n\n  changeItemsPerPage = (pageCount) => {\n    this.setState({\n      perPage: pageCount,\n      page: 1,\n    });\n  };\n\n  render() {\n    const {\n      isLoaded,\n      totalPostsCount,\n      perPage,\n      page,\n      onPageGhanged,\n      posts,\n    } = this.state;\n    const totalPages = this.totalPages(perPage, totalPostsCount);\n\n    this.setAmountPosts(posts, perPage, page);\n\n    if (isLoaded) {\n      return (\n        <section>\n          <Pagination\n            totalPages={totalPages}\n            total={totalPostsCount}\n            perPage={perPage}\n            page={page}\n            onPageGhanged={onPageGhanged}\n            setCurrentPage={this.setCurrentPage}\n            changeItemsPerPage={this.changeItemsPerPage}\n          />\n          <div className=\"App\">\n            <PostList\n              filtredPosts={this.setAmountPosts(posts, perPage, page)}\n            />\n          </div>\n        </section>\n      );\n    }\n\n    return (\n      <div className=\"button_load\">\n        <button\n          className=\"button\"\n          onClick={this.LoadData}\n          type=\"button\"\n          disabled={this.state.isLoading}\n        >\n          {this.state.isLoading ? 'Loading...' : 'Load'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}